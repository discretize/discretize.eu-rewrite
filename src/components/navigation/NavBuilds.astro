---
import { Profession } from "@gw2-ui/components";
import type { EliteSpecTypes, ProfessionTypes } from "@gw2-ui/data/professions";
import { Icon } from "astro-icon";
import { BACKGROUND } from "src/styles";
import Link from "../Link.astro";
import TextDivider from "../TextDivider.astro";

interface Props {
  builds: Record<
    ProfessionTypes,
    {
      title: string;
      url: string;
      rating: string;
      specialization: ProfessionTypes | EliteSpecTypes;
    }[]
  >;
}

const RATINGS = ["Discretize LFG", "Current"];

const { builds } = Astro.props;

// sort builds by rating
const sortedBuilds = Object.keys(builds).reduce((acc, profession) => {
  acc[profession] = builds[profession].sort((a, b) => {
    const aRating = RATINGS.indexOf(a.rating);
    const bRating = RATINGS.indexOf(b.rating);

    if (aRating === bRating) {
      return 0;
    }

    return aRating > bRating ? -1 : 1;
  });

  return acc;
}, {} as Props["builds"]);

// parition builds by rating
const partitionedBuilds = Object.keys(sortedBuilds).reduce(
  (acc, profession) => {
    acc[profession] = sortedBuilds[profession].reduce(
      (acc, build) => {
        const rating = RATINGS.indexOf(build.rating);

        if (rating === 0) {
          acc[0].push(build);
        } else {
          acc[1].push(build);
        }

        return acc;
      },
      [[], []] as [
        (typeof sortedBuilds)[ProfessionTypes],
        (typeof sortedBuilds)[ProfessionTypes]
      ]
    );

    return acc;
  },
  {} as Record<
    ProfessionTypes,
    [
      (typeof sortedBuilds)[ProfessionTypes],
      (typeof sortedBuilds)[ProfessionTypes]
    ]
  >
);
---

<ul class="nested-dropdowns">
  <li>
    <Link href="/builds" className="m-0 discretizeNavButton">Builds</Link>
    <ul class={`${BACKGROUND} shadow`}>
      {
        Object.keys(sortedBuilds).map((profession) => (
          <li class="dark:hover:bg-gray-100/20 hover:bg-gray-300">
            <div class="flex items-center h-[48px] w-[185px] whitespace-nowrap p-3 justify-between">
              <Profession
                name={profession as ProfessionTypes}
                client:load
                disableLink
              />
              <Icon name="mdi:chevron-right" size="1.5rem" />
            </div>

            <ul class={`${BACKGROUND} shadow`}>
              {partitionedBuilds[profession].map((partition, index) => {
                if (partition.length === 0) {
                  return null;
                }

                return (
                  <>
                    <TextDivider>{RATINGS[index]}</TextDivider>
                    {partition.map((build) => (
                      <li class="dark:hover:bg-gray-100/20 hover:bg-gray-300">
                        <Link
                          href={build.url}
                          className="w-full"
                          label={build.title}
                        >
                          <div class="flex items-center h-[48px] whitespace-nowrap p-3 justify-between">
                            <Profession
                              name={build.specialization}
                              client:load
                              disableLink
                              className="whitespace-nowrap"
                              text={build.title}
                            />
                          </div>
                        </Link>
                      </li>
                    ))}
                  </>
                );
              })}
            </ul>
          </li>
        ))
      }
    </ul>
  </li>
</ul>

<style>
  .nested-dropdowns {
    /* Border */
    display: flex;

    /* Reset list styles */
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  .nested-dropdowns li {
    cursor: pointer;

    /* Used to position the sub nested-dropdowns */
    position: relative;
  }

  /* The sub nested-dropdowns */
  .nested-dropdowns ul {
    /* Hidden by default */
    display: none;

    /* Absolute position */
    left: 0;
    position: absolute;
    top: 100%;

    /* Reset styles */
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  /* The second level sub nested-dropdowns */
  .nested-dropdowns ul ul {
    left: 100%;
    position: absolute;
    top: 0;
    min-width: 280px;
  }

  /* Applied to the dividers */
  :global(.nested-dropdowns ul .root) {
    cursor: default;
    padding: 0.1rem 0.5rem;
    font-size: 0.8rem;
    margin-bottom: 0 !important;
    font-weight: 400;
  }

  /* Change background color of list item when being hovered */
  .nested-dropdowns li:hover {
  }

  /* Show the direct sub nested-dropdowns when hovering the list item */
  .nested-dropdowns li:hover > ul {
    display: block;
  }
</style>

<style is:global>
  body:has(> .nested-dropdowns li) .main {
    opacity: 0.5;
    transition: all 0.7s ease;
  }
</style>
