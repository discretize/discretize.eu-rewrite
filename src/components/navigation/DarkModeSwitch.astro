---
---

<script>
  const darkIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
</svg>`;
  const lightIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
</svg>`;

  // create web componetn
  class DarkModeSwitch extends HTMLElement {
    connectedCallback() {
      this.button.addEventListener("click", () => this.toggleTheme());
      this.switchTailwindTheme();
    }

    switchTailwindTheme() {
      if (localStorage.theme === "dark") {
        this.switch.classList.remove("bg-yellow-500", "-translate-x-2");
        this.switch.classList.add("bg-gray-700", "translate-x-full");
        setTimeout(() => {
          this.switch.innerHTML = darkIcon;
        }, 250);
      } else {
        this.switch.classList.add("bg-yellow-500", "-translate-x-2");
        this.switch.classList.remove("bg-gray-700", "translate-x-full");
        setTimeout(() => {
          this.switch.innerHTML = lightIcon;
        }, 250);
      }
    }

    toggleTheme() {
      if (localStorage.theme === "dark") {
        localStorage.theme = "light";
      } else {
        localStorage.theme = "dark";
      }
      // reload tailwind theme
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
        document.documentElement.setAttribute("data-theme", "discretizeDark");
      } else {
        document.documentElement.classList.remove("dark");
        document.documentElement.setAttribute("data-theme", "light");
      }

      this.switchTailwindTheme();
    }

    get button() {
      return this.querySelector("button");
    }

    get switch() {
      return this.querySelector("button div");
    }
  }

  customElements.define("darkmode-switch", DarkModeSwitch);
</script>

<darkmode-switch>
  <button
    class="w-10 h-5 rounded-full bg-white flex items-center transition duration-300 focus:outline-none shadow"
  >
    <div
      class="w-6 h-6 relative rounded-full transition duration-500 transform bg-yellow-500 -translate-x-2 p-1 text-white"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
        ></path>
      </svg>
    </div>
  </button>
</darkmode-switch>
